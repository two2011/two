<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
">

	<context:property-placeholder location="classpath*:*.properties" />
	<context:annotation-config />
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

	<bean id="commandProvider"
		class="pl.edu.agh.two.mud.common.command.provider.SpringCommandProvider"
		init-method="buildProvider" />
	<bean id="commandExecutorProvider"
		class="pl.edu.agh.two.mud.common.command.provider.SpringCommandExecutorProvider"
		init-method="buildProvider" />
	<bean id="commandFactory"
		class="pl.edu.agh.two.mud.common.command.factory.ReflexiveCommandFactory">
		<property name="commandProvider" ref="commandProvider" />
	</bean>
	<bean id="dispatcher"
		class="pl.edu.agh.two.mud.common.command.dispatcher.SynchronizedDispatcher">
		<property name="commandExecutorProvider" ref="commandExecutorProvider" />
		<property name="commandFactory" ref="commandFactory" />
	</bean>

	<bean id="converter"
		class="pl.edu.agh.two.mud.common.command.converter.UICommandToDefinitionConverter" />

	<bean id="availableCommands"
		class="pl.edu.agh.two.mud.server.command.util.AvailableCommands"
		factory-method="getInstance">
		<property name="commandProvider" ref="commandProvider" />
	</bean>

	<bean id="server" class="pl.edu.agh.two.mud.server.Server" />
	<bean id="service" class="pl.edu.agh.two.mud.server.Service"
		scope="prototype">
		<property name="dispatcher" ref="dispatcher" />
		<property name="converter" ref="converter" />
	</bean>
	<bean id="mailer" class="pl.edu.agh.two.mud.server.mail.Mailer" />
	<bean id="serviceRegistry" class="pl.edu.agh.two.mud.server.ServiceRegistry" />
	<bean id="board" class="pl.edu.agh.two.mud.server.world.model.SampleBoard"
		scope="singleton" />

	<bean id="fight" class="pl.edu.agh.two.mud.server.world.fight.impl.PlayersFight"
		scope="prototype">
		<property name="dispatcher" ref="dispatcher" />
		<property name="serviceRegistry" ref="serviceRegistry" />
		<property name="board" ref="board" />
	</bean>

	<!-- BEGIN: Commands & Executors -->
	<bean class="pl.edu.agh.two.mud.server.command.LogInUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.LogInUICommandExecutor">
		<property name="board" ref="board" />
		<property name="serviceRegistry" ref="serviceRegistry" />
		<property name="dispatcher" ref="dispatcher" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.LogOutUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.LogOutUICommandExecutor">
		<property name="board" ref="board" />
		<property name="serviceRegistry" ref="serviceRegistry" />
		<property name="dispatcher" ref="dispatcher" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.RegisterUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.RegisterUICommandExecutor">
		<property name="board" ref="board" />
		<property name="mailer" ref="mailer" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.WhisperUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.WhisperUICommandExecutor">
		<property name="board" ref="board" />
		<property name="serviceRegistry" ref="serviceRegistry" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.TalkUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.TalkUICommandExecutor">
		<property name="board" ref="board" />
		<property name="serviceRegistry" ref="serviceRegistry" />
		<property name="dispatcher" ref="dispatcher" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.MoveUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.MoveUICommandExecutor">
		<property name="board" ref="board" />
		<property name="serviceRegistry" ref="serviceRegistry" />
        <property name="dispatcher" ref="dispatcher"/>
	</bean>

	<bean
		class="pl.edu.agh.two.mud.server.command.executor.SendMessageToUserCommandExecutor"
		scope="prototype">
		<property name="service">
			<bean class="java.lang.Thread" factory-method="currentThread" />
		</property>
	</bean>

	<bean
		class="pl.edu.agh.two.mud.server.command.executor.SendAvailableCommandExecutor">
		<property name="converter" ref="converter" />
		<property name="serviceRegistry" ref="serviceRegistry" />
		<property name="commandProvider" ref="commandProvider" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.HitUICommand" />
	<bean class="pl.edu.agh.two.mud.server.command.executor.HitUICommandExecutor">
		<property name="serviceRegistry" ref="serviceRegistry" />
		<property name="fight" ref="fight" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.RunUICommand" />
	<bean class="pl.edu.agh.two.mud.server.command.executor.RunUICommandExecutor">
		<property name="board" ref="board" />
		<property name="fight" ref="fight" />
		<property name="serviceRegistry" ref="serviceRegistry" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.AttackUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.AttackUICommandExecutor">
		<property name="board" ref="board" />
		<property name="serviceRegistry" ref="serviceRegistry" />
		<property name="fight" ref="fight" />
	</bean>

	<bean class="pl.edu.agh.two.mud.server.command.RefreshUICommand" />
	<bean
		class="pl.edu.agh.two.mud.server.command.executor.RefreshUICommandExecutor">
		<property name="board" ref="board" />
		<property name="serviceRegistry" ref="serviceRegistry" />
	</bean>

	<!-- END: Commands & Executors -->
</beans>